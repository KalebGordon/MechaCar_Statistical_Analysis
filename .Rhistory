#Importing dependencies.
library(dbplyr)
#Reading CSV into a data frame.
MechaCar_mpg<-read.csv(file='MechaCar_mpg.csv')
setwd("~/R_Analysis/MechaCar_Statistical_Analysis")
#Importing dependencies.
library(dbplyr)
#Reading CSV into a data frame.
MechaCar_mpg<-read.csv(file='MechaCar_mpg.csv')
#Creating a linear model that predicts mpg per variable in the MechaCar data frame.
lmMechaCar_mpg <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=MechaCar_mpg)
#Summarizing linear model.
summary(lmMechaCar_mpg)
#Multiple R-squared:  0.7149
#p-value: 5.35e-11
#Reading CSV into a data frame.
Suspension_Coil <- read.csv(file="Suspension_Coil.csv")
Total_Summary <- Suspension_Coil %>% group_by(summary(PSI))
#Summarizing linear model.
summary(lmMechaCar_mpg)
avPlots(lmMechaCar_mpg)
source("~/R_Analysis/MechaCar_Statistical_Analysis/MechaCarChallenge.R", echo=TRUE)
plt <- ggplot(lmMechaCar_mpg)
plt <- ggplot(lmMechaCar_mpg, aes(x=vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, y=mpg))
library(ggplot2)
setwd("~/R_Analysis/MechaCar_Statistical_Analysis")
plt <- ggplot(lmMechaCar_mpg, aes(x=vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, y=mpg))
View(plt)
plt + geom_point() + geom_line(aes(x=vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD), color='red')
#Summarizing linear model.
summary(lmMechaCar_mpg)
#Deliverable 1
#Importing dependencies.
library(dbplyr)
#Reading CSV into a data frame.
MechaCar_mpg<-read.csv(file='MechaCar_mpg.csv')
#Creating a linear model that predicts mpg per variable in the MechaCar data frame.
lmMechaCar_mpg <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=MechaCar_mpg)
library(ggplot2)
#Summarizing linear model.
summary(lmMechaCar_mpg)
#Multiple R-squared:  0.7149
#p-value: 5.35e-11
#Deliverable 2
#Reading CSV into a data frame.
Suspension_Coil <- read.csv(file="Suspension_Coil.csv")
View(Suspension_Coil)
summarize_suspension_coil <- Suspension_Coil %>% group_by(PSI) %>% summarize(Mean=mean(PSI))
library[tidyverse]
library(tidyverse)
summarize_suspension_coil <- Suspension_Coil %>% group_by(PSI) %>% summarize(Mean=mean(PSI))
View(summarize_suspension_coil)
summarize_suspension_coil <- Suspension_Coil %>% summarize(Mean=mean(PSI)) %>% summarize(Median = median(PSI))
summarize_suspension_coil <- Suspension_Coil %>% group_by(PSI) %>% summarize(Mean=mean(PSI)) %>% summarize(Median = median(PSI))
?tidyverse
?summarize
summarize_suspension_coil <- Suspension_Coil %>% group_by(PSI) %>% summarize(Mean=mean(PSI)), summarize(Median = median(PSI)), summarize(Variance = variance), .groups = 'keep')
View(Suspension_Coil)
library(tidyverse)
summarize_suspension_coil <- Suspension_Coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance = var(PSI), SD = sd(PSI), .groups = 'keep') #create summary table with multiple columns
?t.test
t.test(log10(summarize_suspension_coil%Mean), mu=mean(log10(1500))
t.test(log10(summarize_suspension_coil%Mean), 1500
t.test(log10(summarize_suspension_coil$Mean)), 1500
t.test(log10(summarize_suspension_coil$Mean), 1500)
t.test(log10(summarize_suspension_coil$Mean), y=1500)
t.test(log10(summarize_suspension_coil$Mean), mu=1500)
t.test(log10(summarize_suspension_coil$Mean), mu=log10(1500))
t.test(summarize_suspension_coil$Mean), mu=(1500))
t.test((summarize_suspension_coil$Mean), mu=(1500))
View(MechaCar_mpg)
View(Suspension_Coil)
#Deliverable 1
#Importing dependencies.
library(dbplyr)
#Reading CSV into a data frame.
MechaCar_mpg<-read.csv(file='MechaCar_mpg.csv')
#Creating a linear model that predicts mpg per variable in the MechaCar data frame.
lmMechaCar_mpg <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=MechaCar_mpg)
#Summarizing linear model.
summary(lmMechaCar_mpg)
#Multiple R-squared:  0.7149
#p-value: 5.35e-11
#Deliverable 2
#Reading CSV into a data frame.
Suspension_Coil <- read.csv(file="Suspension_Coil.csv")
#Importing dependencies.
library(tidyverse)
#Creating a summary table for Suspension_Coil.
summarize_suspension_coil <- Suspension_Coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance = var(PSI), SD = sd(PSI), .groups = 'keep') #create summary table with multiple columns
#Deliverable 3
#Creating a t-test for the means of suspension_coil PSI.
t.test((summarize_suspension_coil$Mean), mu=(1500))
# Assuming a significance level of .05 percent, our p-value is above our significance level at .4533 percent.
# The two means are statistically similar.
#Summarizing linear model.
summary(lmMechaCar_mpg)
#Multiple R-squared:  0.7149
#p-value: 5.35e-11
#Deliverable 1
#Importing dependencies.
library(dbplyr)
#Reading CSV into a data frame.
MechaCar_mpg<-read.csv(file='MechaCar_mpg.csv')
#Creating a linear model that predicts mpg per variable in the MechaCar data frame.
lmMechaCar_mpg <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data=MechaCar_mpg)
#Summarizing linear model.
summary(lmMechaCar_mpg)
#Multiple R-squared:  0.7149
#p-value: 5.35e-11
#Deliverable 2
#Reading CSV into a data frame.
Suspension_Coil <- read.csv(file="Suspension_Coil.csv")
#Importing dependencies.
library(tidyverse)
#Creating a summary table for Suspension_Coil.
total_summary <- Suspension_Coil %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance = var(PSI), SD = sd(PSI), .groups = 'keep') #create summary table with multiple columns
lot_summary <- Suspension_Coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance = var(PSI), SD = sd(PSI), .groups = 'keep') #create summary table with multiple columns
#Deliverable 3
#Creating a t-test for the means of suspension_coil PSI.
t.test((summarize_suspension_coil$Mean), mu=(1500))
View(total_summary)
View(total_summary)
View(lot_summary)
View(total_summary)
View(lot_summary)
View(lmMechaCar_mpg)
View(lot_summary)
